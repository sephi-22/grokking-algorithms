4.1 Write out the code for the earlier sum function.
A: See: chapter_4.py

4.2 Write a recursive function to count the number of items in a list.
A: See: chapter_4.py

4.3 Find the maximum number in a list.
A: See: chapter_4.py

4.4 Remember binary search from chapter 1? It's a divide-and-conquer algorithm, too. Can you come up with the base case and recursive
case for binary search?
A: The base case for binary search is an array with one item. If the item you're looking for matches the item in the array, you found it!
Otherwise, it isn't in the array. In the recursive case for binary search, you split the array in half, throw away one half, and call
binary search on the other half.

How long would each of these operations take in Big O notation?
4.5 Printing the value of each element in an array - O(n)
4.6 Doubling the value of each element in an array - O(n)
4.7 Doubling the value of just the first element in an array - O(1)
4.8 Creating a multiplication table with all the elements in the array. So if you array is [2,3,7,8,10], you multiply
every element by 2m then multiple every element by 3, then by 7 and so on. - O(n^2)