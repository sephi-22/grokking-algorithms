3.1 Suppose i show you a call stack like this. What information can you give me, just based on this call stack?
Answer: Greet is the parent function. It saved the word Maggie in memory (variable that the function was called with). 
It is saved in a partially completed state when the second function (Greet 2) AKA the child function is called. After the secondv
function completes, it is 'popped' from the call stack, and we return to the Greet function. After which the Greet function
completes and gives us the return value.

3.2 Suppose you accidentally write a recursive function that runs forever. As you saw, your computer allocates memory on the stack for 
each function call. What happens to the stack when your recursive function runs forever?
A: Eventually the computer will run out of memory as the stack gets infinitely tall. When the program runs out of space, it will
exit with a stack overflow error.


